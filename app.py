
# This entire block of code should be in ONE cell, starting with %%writefile app.py

import streamlit as st
from PIL import Image
import numpy as np
import tensorflow as tf

# --- Page Configuration ---
st.set_page_config(page_title="AyurChain ", layout="centered")

# --- Translation Dictionaries ---
# UI Text Translations
UI_TEXT = {
    "English": {
        "title": "üåø AyurChain Authenticator ",
        "description": "Upload an image of a medicinal leaf to verify its authenticity using our AI model.",
        "uploader_label": "Choose a leaf image...",
        "sidebar_about": "About AyurChain",
        "sidebar_info": "This prototype demonstrates AyurChain's camera authentication feature to prevent fraud.",
        "sidebar_model_info_title": "This AI model can identify:",
        "sidebar_warning": "This is a demonstration only. Do not use for medical decisions.",
        "lang_select": "Select Language",
        "auth_complete": "Authentication Complete!",
        "predicted_herb": "Predicted Herb",
        "confidence": "Confidence",
        "about_herb": "About",
        "uses_advantages": "Common Uses & Advantages",
        "found_in": "Where It's Found",
        "learn_more": "Learn more on Wikipedia",
        "quality_check_button": "Check Leaf Quality",
        "quality_status": "Quality Status",
        "spinner_identifying": "Identifying herb...",
        "spinner_quality": "Checking quality..."
    },
    "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä": {
        "title": "üåø ‡§Ü‡§Ø‡•Å‡§∞‡•ç‡§ö‡•á‡§® ‡§ë‡§•‡•á‡§Ç‡§ü‡§ø‡§ï‡•á‡§ü‡§∞ ",
        "description": "‡§π‡§Æ‡§æ‡§∞‡•á AI ‡§Æ‡•â‡§°‡§≤ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á ‡§ï‡§ø‡§∏‡•Ä ‡§î‡§∑‡§ß‡•Ä‡§Ø ‡§™‡§§‡•ç‡§§‡•á ‡§ï‡•Ä ‡§™‡•ç‡§∞‡§æ‡§Æ‡§æ‡§£‡§ø‡§ï‡§§‡§æ ‡§ï‡•ã ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§∏‡§ï‡•Ä ‡§è‡§ï ‡§õ‡§µ‡§ø ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç‡•§",
        "uploader_label": "‡§™‡§§‡•ç‡§§‡•á ‡§ï‡•Ä ‡§è‡§ï ‡§õ‡§µ‡§ø ‡§ö‡•Å‡§®‡•á‡§Ç...",
        "sidebar_about": "‡§Ü‡§Ø‡•Å‡§∞‡•ç‡§ö‡•á‡§® ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç",
        "sidebar_info": "‡§Ø‡§π ‡§™‡•ç‡§∞‡•ã‡§ü‡•ã‡§ü‡§æ‡§á‡§™ ‡§ß‡•ã‡§ñ‡§æ‡§ß‡§°‡§º‡•Ä ‡§ï‡•ã ‡§∞‡•ã‡§ï‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§Ø‡•Å‡§∞‡•ç‡§ö‡•á‡§® ‡§ï‡•Ä ‡§ï‡•à‡§Æ‡§∞‡§æ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡•Ä‡§ï‡§∞‡§£ ‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ ‡§ï‡•ã ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§ø‡§§ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§",
        "sidebar_model_info_title": "‡§Ø‡§π AI ‡§Æ‡•â‡§°‡§≤ ‡§™‡§π‡§ö‡§æ‡§® ‡§∏‡§ï‡§§‡§æ ‡§π‡•à:",
        "sidebar_warning": "‡§Ø‡§π ‡§ï‡•á‡§µ‡§≤ ‡§è‡§ï ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§® ‡§π‡•à‡•§ ‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ ‡§®‡§ø‡§∞‡•ç‡§£‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§á‡§∏‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§® ‡§ï‡§∞‡•á‡§Ç‡•§",
        "lang_select": "‡§≠‡§æ‡§∑‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç",
        "auth_complete": "‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡•Ä‡§ï‡§∞‡§£ ‡§™‡•Ç‡§∞‡•ç‡§£!",
        "predicted_herb": "‡§Ö‡§®‡•Å‡§Æ‡§æ‡§®‡§ø‡§§ ‡§ú‡§°‡§º‡•Ä-‡§¨‡•Ç‡§ü‡•Ä",
        "confidence": "‡§Ü‡§§‡•ç‡§Æ‡§µ‡§ø‡§∂‡•ç‡§µ‡§æ‡§∏",
        "about_herb": "‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç",
        "uses_advantages": "‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§â‡§™‡§Ø‡•ã‡§ó ‡§î‡§∞ ‡§≤‡§æ‡§≠",
        "found_in": "‡§Ø‡§π ‡§ï‡§π‡§æ‡§Å ‡§™‡§æ‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à",
        "learn_more": "‡§µ‡§ø‡§ï‡§ø‡§™‡•Ä‡§°‡§ø‡§Ø‡§æ ‡§™‡§∞ ‡§î‡§∞ ‡§ú‡§æ‡§®‡•á‡§Ç",
        "quality_check_button": "‡§™‡§§‡•ç‡§§‡•Ä ‡§ï‡•Ä ‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ ‡§ú‡§æ‡§Ç‡§ö‡•á‡§Ç",
        "quality_status": "‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ ‡§ï‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø",
        "spinner_identifying": "‡§ú‡§°‡§º‡•Ä-‡§¨‡•Ç‡§ü‡•Ä ‡§ï‡•Ä ‡§™‡§π‡§ö‡§æ‡§® ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à...",
        "spinner_quality": "‡§ó‡•Å‡§£‡§µ‡§§‡•ç‡§§‡§æ ‡§ï‡•Ä ‡§ú‡§æ‡§Ç‡§ö ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à..."
    },
    "‡≤ï‡≤®‡≥ç‡≤®‡≤°": {
        "title": "üåø ‡≤Ü‡≤Ø‡≥Å‡≤∞‡≥ç‡≤ö‡≥à‡≤®‡≥ç ‡≤Ö‡≤•‡≥Ü‡≤Ç‡≤ü‡≤ø‡≤ï‡≥á‡≤ü‡≤∞‡≥ç ",
        "description": "‡≤®‡≤Æ‡≥ç‡≤Æ AI ‡≤Æ‡≤æ‡≤¶‡≤∞‡≤ø‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≤≥‡≤∏‡≤ø‡≤ï‡≥ä‡≤Ç‡≤°‡≥Å ‡≤î‡≤∑‡≤ß‡≥Ä‡≤Ø ‡≤é‡≤≤‡≥Ü‡≤Ø ‡≤∏‡≤§‡≥ç‡≤Ø‡≤æ‡≤∏‡≤§‡≥ç‡≤Ø‡≤§‡≥Ü‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤™‡≤∞‡≤ø‡≤∂‡≥Ä‡≤≤‡≤ø‡≤∏‡≤≤‡≥Å ‡≤Ö‡≤¶‡≤∞ ‡≤ö‡≤ø‡≤§‡≥ç‡≤∞‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤Ö‡≤™‡≥ç‚Äå‡≤≤‡≥ã‡≤°‡≥ç ‡≤Æ‡≤æ‡≤°‡≤ø.",
        "uploader_label": "‡≤é‡≤≤‡≥Ü‡≤Ø ‡≤ö‡≤ø‡≤§‡≥ç‡≤∞‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤Ü‡≤∞‡≤ø‡≤∏‡≤ø...",
        "sidebar_about": "‡≤Ü‡≤Ø‡≥Å‡≤∞‡≥ç‡≤ö‡≥à‡≤®‡≥ç ‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü",
        "sidebar_info": "‡≤à ‡≤Æ‡≥Ç‡≤≤‡≤Æ‡≤æ‡≤¶‡≤∞‡≤ø‡≤Ø‡≥Å ‡≤µ‡≤Ç‡≤ö‡≤®‡≥Ü‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤§‡≤°‡≥Ü‡≤ó‡≤ü‡≥ç‡≤ü‡≤≤‡≥Å ‡≤Ü‡≤Ø‡≥Å‡≤∞‡≥ç‡≤ö‡≥à‡≤®‡≥ç‚Äå‡≤® ‡≤ï‡≥ç‡≤Ø‡≤æ‡≤Æ‡≥Ü‡≤∞‡≤æ ‡≤¶‡≥É‡≤¢‡≥Ä‡≤ï‡≤∞‡≤£ ‡≤µ‡≥à‡≤∂‡≤ø‡≤∑‡≥ç‡≤ü‡≥ç‡≤Ø‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤™‡≥ç‡≤∞‡≤¶‡≤∞‡≥ç‡≤∂‡≤ø‡≤∏‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü.",
        "sidebar_model_info_title": "‡≤à AI ‡≤Æ‡≤æ‡≤¶‡≤∞‡≤ø‡≤Ø‡≥Å ‡≤ó‡≥Å‡≤∞‡≥Å‡≤§‡≤ø‡≤∏‡≤¨‡≤≤‡≥ç‡≤≤‡≤¶‡≥Å:",
        "sidebar_warning": "‡≤á‡≤¶‡≥Å ‡≤ï‡≥á‡≤µ‡≤≤ ‡≤™‡≥ç‡≤∞‡≤¶‡≤∞‡≥ç‡≤∂‡≤®‡≤µ‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü. ‡≤µ‡≥à‡≤¶‡≥ç‡≤Ø‡≤ï‡≥Ä‡≤Ø ‡≤®‡≤ø‡≤∞‡≥ç‡≤ß‡≤æ‡≤∞‡≤ó‡≤≥‡≤ø‡≤ó‡≥Ü ‡≤¨‡≤≥‡≤∏‡≤¨‡≥á‡≤°‡≤ø.",
        "lang_select": "‡≤≠‡≤æ‡≤∑‡≥Ü‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü‡≤Æ‡≤æ‡≤°‡≤ø",
        "auth_complete": "‡≤¶‡≥É‡≤¢‡≥Ä‡≤ï‡≤∞‡≤£ ‡≤™‡≥Ç‡≤∞‡≥ç‡≤£‡≤ó‡≥ä‡≤Ç‡≤°‡≤ø‡≤¶‡≥Ü!",
        "predicted_herb": "‡≤ä‡≤π‡≤ø‡≤∏‡≤≤‡≤æ‡≤¶ ‡≤ó‡≤ø‡≤°‡≤Æ‡≥Ç‡≤≤‡≤ø‡≤ï‡≥Ü",
        "confidence": "‡≤µ‡≤ø‡≤∂‡≥ç‡≤µ‡≤æ‡≤∏",
        "about_herb": "‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü",
        "uses_advantages": "‡≤∏‡≤æ‡≤Æ‡≤æ‡≤®‡≥ç‡≤Ø ‡≤â‡≤™‡≤Ø‡≥ã‡≤ó‡≤ó‡≤≥‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤Ö‡≤®‡≥Å‡≤ï‡≥Ç‡≤≤‡≤ó‡≤≥‡≥Å",
        "found_in": "‡≤á‡≤¶‡≥Å ‡≤é‡≤≤‡≥ç‡≤≤‡≤ø ‡≤ï‡≤Ç‡≤°‡≥Å‡≤¨‡≤∞‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü",
        "learn_more": "‡≤µ‡≤ø‡≤ï‡≤ø‡≤™‡≥Ä‡≤°‡≤ø‡≤Ø‡≤æ‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤á‡≤®‡≥ç‡≤®‡≤∑‡≥ç‡≤ü‡≥Å ‡≤§‡≤ø‡≤≥‡≤ø‡≤Ø‡≤ø‡≤∞‡≤ø",
        "quality_check_button": "‡≤é‡≤≤‡≥Ü‡≤Ø ‡≤ó‡≥Å‡≤£‡≤Æ‡≤ü‡≥ç‡≤ü‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤™‡≤∞‡≤ø‡≤∂‡≥Ä‡≤≤‡≤ø‡≤∏‡≤ø",
        "quality_status": "‡≤ó‡≥Å‡≤£‡≤Æ‡≤ü‡≥ç‡≤ü‡≤¶ ‡≤∏‡≥ç‡≤•‡≤ø‡≤§‡≤ø",
        "spinner_identifying": "‡≤ó‡≤ø‡≤°‡≤Æ‡≥Ç‡≤≤‡≤ø‡≤ï‡≥Ü‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤ó‡≥Å‡≤∞‡≥Å‡≤§‡≤ø‡≤∏‡≤≤‡≤æ‡≤ó‡≥Å‡≤§‡≥ç‡≤§‡≤ø‡≤¶‡≥Ü...",
        "spinner_quality": "‡≤ó‡≥Å‡≤£‡≤Æ‡≤ü‡≥ç‡≤ü‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤™‡≤∞‡≤ø‡≤∂‡≥Ä‡≤≤‡≤ø‡≤∏‡≤≤‡≤æ‡≤ó‡≥Å‡≤§‡≥ç‡≤§‡≤ø‡≤¶‡≥Ü..."
    }
}

# Herb Data Translations
HERB_DATA = {
    "Tulsi": {
        "English": {"display_name": "Tulsi (Holy Basil)", "info": "Known as the 'Queen of Herbs', Tulsi is a sacred plant in Hinduism, revered for its medicinal properties.", "uses": "Used to treat respiratory issues, reduce stress, boost immunity, and improve skin health.", "found": "Native to the Indian subcontinent and widespread throughout Southeast Asia.", "wiki": "https://en.wikipedia.org/wiki/Ocimum_tenuiflorum"},
        "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä": {"display_name": "‡§§‡•Å‡§≤‡§∏‡•Ä", "info": "'‡§ú‡§°‡§º‡•Ä-‡§¨‡•Ç‡§ü‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∞‡§æ‡§®‡•Ä' ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡•Ä ‡§ú‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡•Ä ‡§§‡•Å‡§≤‡§∏‡•Ä ‡§π‡§ø‡§Ç‡§¶‡•Ç ‡§ß‡§∞‡•ç‡§Æ ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§™‡§µ‡§ø‡§§‡•ç‡§∞ ‡§™‡•å‡§ß‡§æ ‡§π‡•à, ‡§ú‡•ã ‡§Ö‡§™‡§®‡•á ‡§î‡§∑‡§ß‡•Ä‡§Ø ‡§ó‡•Å‡§£‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•Ç‡§ú‡§®‡•Ä‡§Ø ‡§π‡•à‡•§", "uses": "‡§∂‡•ç‡§µ‡§∏‡§® ‡§∏‡§Ç‡§¨‡§Ç‡§ß‡•Ä ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§á‡§≤‡§æ‡§ú, ‡§§‡§®‡§æ‡§µ ‡§ï‡§Æ ‡§ï‡§∞‡§®‡•á, ‡§™‡•ç‡§∞‡§§‡§ø‡§∞‡§ï‡•ç‡§∑‡§æ ‡§¨‡§¢‡§º‡§æ‡§®‡•á ‡§î‡§∞ ‡§§‡•ç‡§µ‡§ö‡§æ ‡§ï‡•á ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§ß‡§æ‡§∞ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§", "found": "‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§â‡§™‡§Æ‡§π‡§æ‡§¶‡•ç‡§µ‡•Ä‡§™ ‡§ï‡§æ ‡§Æ‡•Ç‡§≤ ‡§®‡§ø‡§µ‡§æ‡§∏‡•Ä ‡§î‡§∞ ‡§™‡•Ç‡§∞‡•á ‡§¶‡§ï‡•ç‡§∑‡§ø‡§£ ‡§™‡•Ç‡§∞‡•ç‡§µ ‡§è‡§∂‡§ø‡§Ø‡§æ ‡§Æ‡•á‡§Ç ‡§µ‡•ç‡§Ø‡§æ‡§™‡§ï ‡§π‡•à‡•§", "wiki": "https://hi.wikipedia.org/wiki/%E0%A4%A4%E0%A5%81%E0%A4%B2%E0%A4%B8%E0%A5%80"},
        "‡≤ï‡≤®‡≥ç‡≤®‡≤°": {"display_name": "‡≤§‡≥Å‡≤≥‡≤∏‡≤ø", "info": "'‡≤ó‡≤ø‡≤°‡≤Æ‡≥Ç‡≤≤‡≤ø‡≤ï‡≥Ü‡≤ó‡≤≥ ‡≤∞‡≤æ‡≤£‡≤ø' ‡≤é‡≤Ç‡≤¶‡≥Å ‡≤ï‡≤∞‡≥Ü‡≤Ø‡≤≤‡≥ç‡≤™‡≤°‡≥Å‡≤µ ‡≤§‡≥Å‡≤≥‡≤∏‡≤ø, ‡≤π‡≤ø‡≤Ç‡≤¶‡≥Ç ‡≤ß‡≤∞‡≥ç‡≤Æ‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤™‡≤µ‡≤ø‡≤§‡≥ç‡≤∞ ‡≤∏‡≤∏‡≥ç‡≤Ø‡≤µ‡≤æ‡≤ó‡≤ø‡≤¶‡≥ç‡≤¶‡≥Å, ‡≤Ö‡≤¶‡≤∞ ‡≤î‡≤∑‡≤ß‡≥Ä‡≤Ø ‡≤ó‡≥Å‡≤£‡≤ó‡≤≥‡≤ø‡≤ó‡≤æ‡≤ó‡≤ø ‡≤™‡≥Ç‡≤ú‡≤ø‡≤∏‡≤≤‡≥ç‡≤™‡≤°‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü.", "uses": "‡≤â‡≤∏‡≤ø‡≤∞‡≤æ‡≤ü‡≤¶ ‡≤§‡≥ä‡≤Ç‡≤¶‡≤∞‡≥Ü‡≤ó‡≤≥‡≤ø‡≤ó‡≥Ü ‡≤ö‡≤ø‡≤ï‡≤ø‡≤§‡≥ç‡≤∏‡≥Ü ‡≤®‡≥Ä‡≤°‡≤≤‡≥Å, ‡≤í‡≤§‡≥ç‡≤§‡≤°‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤ï‡≤°‡≤ø‡≤Æ‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤≤‡≥Å, ‡≤∞‡≥ã‡≤ó‡≤®‡≤ø‡≤∞‡≥ã‡≤ß‡≤ï ‡≤∂‡≤ï‡≥ç‡≤§‡≤ø‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤π‡≥Ü‡≤ö‡≥ç‡≤ö‡≤ø‡≤∏‡≤≤‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤ö‡≤∞‡≥ç‡≤Æ‡≤¶ ‡≤Ü‡≤∞‡≥ã‡≤ó‡≥ç‡≤Ø‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤∏‡≥Å‡≤ß‡≤æ‡≤∞‡≤ø‡≤∏‡≤≤‡≥Å ‡≤¨‡≤≥‡≤∏‡≤≤‡≤æ‡≤ó‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü.", "found": "‡≤≠‡≤æ‡≤∞‡≤§‡≥Ä‡≤Ø ‡≤â‡≤™‡≤ñ‡≤Ç‡≤°‡≤¶ ‡≤∏‡≥ç‡≤•‡≤≥‡≥Ä‡≤Ø ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤Ü‡≤ó‡≥ç‡≤®‡≥á‡≤Ø ‡≤è‡≤∑‡≥ç‡≤Ø‡≤æ‡≤¶‡≤æ‡≤¶‡≥ç‡≤Ø‡≤Ç‡≤§ ‡≤µ‡≥ç‡≤Ø‡≤æ‡≤™‡≤ï‡≤µ‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü.", "wiki": "https://kn.wikipedia.org/wiki/%E0%B2%A4%E0%B3%81%E0%B2%B3%E0%B2%B8%E0%B2%BF"}
    },
    "Mint": {
        "English": {"display_name": "Mint (Pudina)", "info": "Mint is an aromatic herb known for its refreshing flavor and cooling sensation.", "uses": "Commonly used to aid digestion, freshen breath, and relieve symptoms of the common cold.", "found": "Widespread across Europe, Asia, Africa, Australia, and North America.", "wiki": "https://en.wikipedia.org/wiki/Mentha"},
        "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä": {"display_name": "‡§™‡•Å‡§¶‡•Ä‡§®‡§æ", "info": "‡§™‡•Å‡§¶‡•Ä‡§®‡§æ ‡§è‡§ï ‡§∏‡•Å‡§ó‡§Ç‡§ß‡§ø‡§§ ‡§ú‡§°‡§º‡•Ä-‡§¨‡•Ç‡§ü‡•Ä ‡§π‡•à ‡§ú‡•ã ‡§Ö‡§™‡§®‡•á ‡§§‡§æ‡§ú‡§º‡§ó‡•Ä ‡§≠‡§∞‡•á ‡§∏‡•ç‡§µ‡§æ‡§¶ ‡§î‡§∞ ‡§†‡§Ç‡§°‡§ï ‡§ï‡•á ‡§è‡§π‡§∏‡§æ‡§∏ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ú‡§æ‡§®‡•Ä ‡§ú‡§æ‡§§‡•Ä ‡§π‡•à‡•§", "uses": "‡§Ü‡§Æ‡§§‡•å‡§∞ ‡§™‡§∞ ‡§™‡§æ‡§ö‡§® ‡§Æ‡•á‡§Ç ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ, ‡§∏‡§æ‡§Ç‡§∏‡•ã‡§Ç ‡§ï‡•ã ‡§§‡§æ‡§ú‡§º‡§æ ‡§ï‡§∞‡§®‡•á ‡§î‡§∞ ‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§∏‡§∞‡•ç‡§¶‡•Ä ‡§ï‡•á ‡§≤‡§ï‡•ç‡§∑‡§£‡•ã‡§Ç ‡§∏‡•á ‡§∞‡§æ‡§π‡§§ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§", "found": "‡§Ø‡•Ç‡§∞‡•ã‡§™, ‡§è‡§∂‡§ø‡§Ø‡§æ, ‡§Ö‡§´‡•ç‡§∞‡•Ä‡§ï‡§æ, ‡§ë‡§∏‡•ç‡§ü‡•ç‡§∞‡•á‡§≤‡§ø‡§Ø‡§æ ‡§î‡§∞ ‡§â‡§§‡•ç‡§§‡§∞‡•Ä ‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ ‡§Æ‡•á‡§Ç ‡§µ‡•ç‡§Ø‡§æ‡§™‡§ï ‡§π‡•à‡•§", "wiki": "https://hi.wikipedia.org/wiki/%E0%A4%AA%E0%A5%81%E0%A4%A6%E0%A5%80%E0%A4%A8%E0%A4%BE"},
        "‡≤ï‡≤®‡≥ç‡≤®‡≤°": {"display_name": "‡≤™‡≥Å‡≤¶‡≥Ä‡≤®", "info": "‡≤™‡≥Å‡≤¶‡≥Ä‡≤® ‡≤í‡≤Ç‡≤¶‡≥Å ‡≤∏‡≥Å‡≤µ‡≤æ‡≤∏‡≤®‡≤æ‡≤Ø‡≥Å‡≤ï‡≥ç‡≤§ ‡≤ó‡≤ø‡≤°‡≤Æ‡≥Ç‡≤≤‡≤ø‡≤ï‡≥Ü‡≤Ø‡≤æ‡≤ó‡≤ø‡≤¶‡≥ç‡≤¶‡≥Å, ‡≤Ö‡≤¶‡≤∞ ‡≤∞‡≤ø‡≤´‡≥ç‡≤∞‡≥Ü‡≤∂‡≥ç ‡≤™‡≤∞‡≤ø‡≤Æ‡≤≥ ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤§‡≤Ç‡≤™‡≤æ‡≤ó‡≤ø‡≤∏‡≥Å‡≤µ ‡≤∏‡≤Ç‡≤µ‡≥á‡≤¶‡≤®‡≥Ü‡≤ó‡≥Ü ‡≤π‡≥Ü‡≤∏‡≤∞‡≥Å‡≤µ‡≤æ‡≤∏‡≤ø‡≤Ø‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü.", "uses": "‡≤∏‡≤æ‡≤Æ‡≤æ‡≤®‡≥ç‡≤Ø‡≤µ‡≤æ‡≤ó‡≤ø ‡≤ú‡≥Ä‡≤∞‡≥ç‡≤£‡≤ï‡≥ç‡≤∞‡≤ø‡≤Ø‡≥Ü‡≤ó‡≥Ü ‡≤∏‡≤π‡≤æ‡≤Ø ‡≤Æ‡≤æ‡≤°‡≤≤‡≥Å, ‡≤â‡≤∏‡≤ø‡≤∞‡≤æ‡≤ü‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤§‡≤æ‡≤ú‡≤æ‡≤ó‡≥ä‡≤≥‡≤ø‡≤∏‡≤≤‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤∏‡≤æ‡≤Æ‡≤æ‡≤®‡≥ç‡≤Ø ‡≤∂‡≥Ä‡≤§‡≤¶ ‡≤≤‡≤ï‡≥ç‡≤∑‡≤£‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤®‡≤ø‡≤µ‡≤æ‡≤∞‡≤ø‡≤∏‡≤≤‡≥Å ‡≤¨‡≤≥‡≤∏‡≤≤‡≤æ‡≤ó‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü.", "found": "‡≤Ø‡≥Å‡≤∞‡≥ã‡≤™‡≥ç, ‡≤è‡≤∑‡≥ç‡≤Ø‡≤æ, ‡≤Ü‡≤´‡≥ç‡≤∞‡≤ø‡≤ï‡≤æ, ‡≤Ü‡≤∏‡≥ç‡≤ü‡≥ç‡≤∞‡≥á‡≤≤‡≤ø‡≤Ø‡≤æ ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤â‡≤§‡≥ç‡≤§‡≤∞ ‡≤Ö‡≤Æ‡≥Ü‡≤∞‡≤ø‡≤ï‡≤æ‡≤¶‡≤æ‡≤¶‡≥ç‡≤Ø‡≤Ç‡≤§ ‡≤µ‡≥ç‡≤Ø‡≤æ‡≤™‡≤ï‡≤µ‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü.", "wiki": "https://kn.wikipedia.org/wiki/%E0%B2%AA%E0%B3%81%E0%B2%A6%E0%B3%80%E0%B2%A8"}
    },
    "Ashwagandha": {
        "English": {"display_name": "Ashwagandha", "info": "An ancient medicinal herb classified as an adaptogen, meaning it can help your body manage stress.", "uses": "Known to boost brain function, lower cortisol levels, and help fight symptoms of anxiety and depression.", "found": "Native to India, North Africa, and the Middle East.", "wiki": "https://en.wikipedia.org/wiki/Withania_somnifera"},
        "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä": {"display_name": "‡§Ö‡§∂‡•ç‡§µ‡§ó‡§Ç‡§ß‡§æ", "info": "‡§è‡§ï ‡§™‡•ç‡§∞‡§æ‡§ö‡•Ä‡§® ‡§î‡§∑‡§ß‡•Ä‡§Ø ‡§ú‡§°‡§º‡•Ä-‡§¨‡•Ç‡§ü‡•Ä ‡§ú‡§ø‡§∏‡•á ‡§è‡§°‡§æ‡§™‡•ç‡§ü‡•ã‡§ú‡•á‡§® ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§µ‡§∞‡•ç‡§ó‡•Ä‡§ï‡•É‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§Ö‡§∞‡•ç‡§• ‡§π‡•à ‡§ï‡§ø ‡§Ø‡§π ‡§Ü‡§™‡§ï‡•á ‡§∂‡§∞‡•Ä‡§∞ ‡§ï‡•ã ‡§§‡§®‡§æ‡§µ ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•Ä ‡§π‡•à‡•§", "uses": "‡§Æ‡§∏‡•ç‡§§‡§ø‡§∑‡•ç‡§ï ‡§ï‡•Ä ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∑‡§Æ‡§§‡§æ ‡§¨‡§¢‡§º‡§æ‡§®‡•á, ‡§ï‡•ã‡§∞‡•ç‡§ü‡§ø‡§∏‡•ã‡§≤ ‡§ï‡•á ‡§∏‡•ç‡§§‡§∞ ‡§ï‡•ã ‡§ï‡§Æ ‡§ï‡§∞‡§®‡•á ‡§î‡§∞ ‡§ö‡§ø‡§Ç‡§§‡§æ ‡§î‡§∞ ‡§Ö‡§µ‡§∏‡§æ‡§¶ ‡§ï‡•á ‡§≤‡§ï‡•ç‡§∑‡§£‡•ã‡§Ç ‡§∏‡•á ‡§≤‡§°‡§º‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ú‡§æ‡§®‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§", "found": "‡§≠‡§æ‡§∞‡§§, ‡§â‡§§‡•ç‡§§‡§∞‡•Ä ‡§Ö‡§´‡•ç‡§∞‡•Ä‡§ï‡§æ ‡§î‡§∞ ‡§Æ‡§ß‡•ç‡§Ø ‡§™‡•Ç‡§∞‡•ç‡§µ ‡§ï‡§æ ‡§Æ‡•Ç‡§≤ ‡§®‡§ø‡§µ‡§æ‡§∏‡•Ä‡•§", "wiki": "https://hi.wikipedia.org/wiki/%E0%A4%85%E0%A4%B6%E0%A5%8D%E0%A4%B5%E0%A4%97%E0%A4%A8%E0%A5%8D%E0%A4%A7%E0%A4%BE"},
        "‡≤ï‡≤®‡≥ç‡≤®‡≤°": {"display_name": "‡≤Ö‡≤∂‡≥ç‡≤µ‡≤ó‡≤Ç‡≤ß", "info": "‡≤í‡≤Ç‡≤¶‡≥Å ‡≤™‡≥ç‡≤∞‡≤æ‡≤ö‡≥Ä‡≤® ‡≤î‡≤∑‡≤ß‡≥Ä‡≤Ø ‡≤∏‡≤∏‡≥ç‡≤Ø, ‡≤á‡≤¶‡≤®‡≥ç‡≤®‡≥Å ‡≤Ö‡≤°‡≤æ‡≤™‡≥ç‡≤ü‡≥ã‡≤ú‡≥Ü‡≤®‡≥ç ‡≤é‡≤Ç‡≤¶‡≥Å ‡≤µ‡≤∞‡≥ç‡≤ó‡≥Ä‡≤ï‡≤∞‡≤ø‡≤∏‡≤≤‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü, ‡≤Ö‡≤Ç‡≤¶‡≤∞‡≥Ü ‡≤á‡≤¶‡≥Å ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤¶‡≥á‡≤π‡≤ï‡≥ç‡≤ï‡≥Ü ‡≤í‡≤§‡≥ç‡≤§‡≤°‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤®‡≤ø‡≤∞‡≥ç‡≤µ‡≤π‡≤ø‡≤∏‡≤≤‡≥Å ‡≤∏‡≤π‡≤æ‡≤Ø ‡≤Æ‡≤æ‡≤°‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü.", "uses": "‡≤Æ‡≥Ü‡≤¶‡≥Å‡≤≥‡≤ø‡≤® ‡≤ï‡≤æ‡≤∞‡≥ç‡≤Ø‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤π‡≥Ü‡≤ö‡≥ç‡≤ö‡≤ø‡≤∏‡≤≤‡≥Å, ‡≤ï‡≤æ‡≤∞‡≥ç‡≤ü‡≤ø‡≤∏‡≥ã‡≤≤‡≥ç ‡≤Æ‡≤ü‡≥ç‡≤ü‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤ï‡≤°‡≤ø‡≤Æ‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤≤‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤Ü‡≤§‡≤Ç‡≤ï ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤ñ‡≤ø‡≤®‡≥ç‡≤®‡≤§‡≥Ü‡≤Ø ‡≤≤‡≤ï‡≥ç‡≤∑‡≤£‡≤ó‡≤≥ ‡≤µ‡≤ø‡≤∞‡≥Å‡≤¶‡≥ç‡≤ß ‡≤π‡≥ã‡≤∞‡≤æ‡≤°‡≤≤‡≥Å ‡≤∏‡≤π‡≤æ‡≤Ø ‡≤Æ‡≤æ‡≤°‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü.", "found": "‡≤≠‡≤æ‡≤∞‡≤§, ‡≤â‡≤§‡≥ç‡≤§‡≤∞ ‡≤Ü‡≤´‡≥ç‡≤∞‡≤ø‡≤ï‡≤æ ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤Æ‡≤ß‡≥ç‡≤Ø‡≤™‡≥ç‡≤∞‡≤æ‡≤ö‡≥ç‡≤Ø‡≤¶ ‡≤∏‡≥ç‡≤•‡≤≥‡≥Ä‡≤Ø.", "wiki": "https://kn.wikipedia.org/wiki/%E0%B2%85%E0%B2%B6%E0%B3%8D%E0%B2%B5%E0%B2%97%E0%B2%82%E0%B2%A7"}
    },
    "Shatavari": {
         "English": {"display_name": "Shatavari", "info": "Known as a reproductive tonic, Shatavari is a species of asparagus common in India and the Himalayas.", "uses": "Primarily used to support the female reproductive system, boost the immune system, and act as an antioxidant.", "found": "Found in tropical and subtropical parts of India, Asia, Australia, and Africa.", "wiki": "https://en.wikipedia.org/wiki/Asparagus_racemosus"},
         "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä": {"display_name": "‡§∂‡§§‡§æ‡§µ‡§∞‡•Ä", "info": "‡§è‡§ï ‡§™‡•ç‡§∞‡§ú‡§®‡§® ‡§ü‡•â‡§®‡§ø‡§ï ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡•Ä ‡§ú‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡•Ä ‡§∂‡§§‡§æ‡§µ‡§∞‡•Ä, ‡§≠‡§æ‡§∞‡§§ ‡§î‡§∞ ‡§π‡§ø‡§Æ‡§æ‡§≤‡§Ø ‡§Æ‡•á‡§Ç ‡§Ü‡§Æ ‡§∂‡§§‡§æ‡§µ‡§∞‡•Ä ‡§ï‡•Ä ‡§è‡§ï ‡§™‡•ç‡§∞‡§ú‡§æ‡§§‡§ø ‡§π‡•à‡•§", "uses": "‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§Æ‡§π‡§ø‡§≤‡§æ ‡§™‡•ç‡§∞‡§ú‡§®‡§® ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä ‡§ï‡§æ ‡§∏‡§Æ‡§∞‡•ç‡§•‡§® ‡§ï‡§∞‡§®‡•á, ‡§™‡•ç‡§∞‡§§‡§ø‡§∞‡§ï‡•ç‡§∑‡§æ ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä ‡§ï‡•ã ‡§¨‡§¢‡§º‡§æ‡§µ‡§æ ‡§¶‡•á‡§®‡•á ‡§î‡§∞ ‡§è‡§ï ‡§è‡§Ç‡§ü‡•Ä‡§ë‡§ï‡•ç‡§∏‡§ø‡§°‡•á‡§Ç‡§ü ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§", "found": "‡§≠‡§æ‡§∞‡§§, ‡§è‡§∂‡§ø‡§Ø‡§æ, ‡§ë‡§∏‡•ç‡§ü‡•ç‡§∞‡•á‡§≤‡§ø‡§Ø‡§æ ‡§î‡§∞ ‡§Ö‡§´‡•ç‡§∞‡•Ä‡§ï‡§æ ‡§ï‡•á ‡§â‡§∑‡•ç‡§£‡§ï‡§ü‡§ø‡§¨‡§Ç‡§ß‡•Ä‡§Ø ‡§î‡§∞ ‡§â‡§™‡•ã‡§∑‡•ç‡§£‡§ï‡§ü‡§ø‡§¨‡§Ç‡§ß‡•Ä‡§Ø ‡§≠‡§æ‡§ó‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§™‡§æ‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§", "wiki": "https://hi.wikipedia.org/wiki/%E0%A4%B6%E0%A4%A4%E0%A4%BE%E0%A4%B5%E0%A4%B0%E0%A5%80"},
         "‡≤ï‡≤®‡≥ç‡≤®‡≤°": {"display_name": "‡≤∂‡≤§‡≤æ‡≤µ‡≤∞‡≤ø", "info": "‡≤∏‡≤Ç‡≤§‡≤æ‡≤®‡≥ã‡≤§‡≥ç‡≤™‡≤§‡≥ç‡≤§‡≤ø œÑŒøŒΩic ‡≤é‡≤Ç‡≤¶‡≥Å ‡≤ï‡≤∞‡≥Ü‡≤Ø‡≤≤‡≥ç‡≤™‡≤°‡≥Å‡≤µ ‡≤∂‡≤§‡≤æ‡≤µ‡≤∞‡≤ø, ‡≤≠‡≤æ‡≤∞‡≤§ ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤π‡≤ø‡≤Æ‡≤æ‡≤≤‡≤Ø‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤∏‡≤æ‡≤Æ‡≤æ‡≤®‡≥ç‡≤Ø‡≤µ‡≤æ‡≤¶ ‡≤∂‡≤§‡≤æ‡≤µ‡≤∞‡≤ø ‡≤ú‡≤æ‡≤§‡≤ø‡≤Ø‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü.", "uses": "‡≤Æ‡≥Å‡≤ñ‡≥ç‡≤Ø‡≤µ‡≤æ‡≤ó‡≤ø ‡≤∏‡≥ç‡≤§‡≥ç‡≤∞‡≥Ä ‡≤∏‡≤Ç‡≤§‡≤æ‡≤®‡≥ã‡≤§‡≥ç‡≤™‡≤§‡≥ç‡≤§‡≤ø ‡≤µ‡≥ç‡≤Ø‡≤µ‡≤∏‡≥ç‡≤•‡≥Ü‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≥Ü‡≤Ç‡≤¨‡≤≤‡≤ø‡≤∏‡≤≤‡≥Å, ‡≤∞‡≥ã‡≤ó‡≤®‡≤ø‡≤∞‡≥ã‡≤ß‡≤ï ‡≤∂‡≤ï‡≥ç‡≤§‡≤ø‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤π‡≥Ü‡≤ö‡≥ç‡≤ö‡≤ø‡≤∏‡≤≤‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤â‡≤§‡≥ç‡≤ï‡≤∞‡≥ç‡≤∑‡≤£ ‡≤®‡≤ø‡≤∞‡≥ã‡≤ß‡≤ï‡≤µ‡≤æ‡≤ó‡≤ø ‡≤ï‡≤æ‡≤∞‡≥ç‡≤Ø‡≤®‡≤ø‡≤∞‡≥ç‡≤µ‡≤π‡≤ø‡≤∏‡≤≤‡≥Å ‡≤¨‡≤≥‡≤∏‡≤≤‡≤æ‡≤ó‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü.", "found": "‡≤≠‡≤æ‡≤∞‡≤§, ‡≤è‡≤∑‡≥ç‡≤Ø‡≤æ, ‡≤Ü‡≤∏‡≥ç‡≤ü‡≥ç‡≤∞‡≥á‡≤≤‡≤ø‡≤Ø‡≤æ ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤Ü‡≤´‡≥ç‡≤∞‡≤ø‡≤ï‡≤æ‡≤¶ ‡≤â‡≤∑‡≥ç‡≤£‡≤µ‡≤≤‡≤Ø‡≤¶ ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤â‡≤™‡≥ã‡≤∑‡≥ç‡≤£‡≤µ‡≤≤‡≤Ø‡≤¶ ‡≤≠‡≤æ‡≤ó‡≤ó‡≤≥‡≤≤‡≥ç‡≤≤‡≤ø ‡≤ï‡≤Ç‡≤°‡≥Å‡≤¨‡≤∞‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü.", "wiki": "https://kn.wikipedia.org/wiki/%E0%B2%B6%E0%B2%A4%E0%B2%BE%E0%B2%B5%E0%B2%B0%E0%B2%BF"}
    },
    "Brahmi": {
         "English": {"display_name": "Brahmi", "info": "A staple in traditional Ayurvedic medicine, Brahmi is a non-aromatic herb known for its benefits to the brain.", "uses": "Used to improve memory, reduce anxiety, and treat epilepsy. It has strong antioxidant properties.", "found": "Native to the wetlands of southern and Eastern India, Australia, Europe, Africa, Asia, and North and South America.", "wiki": "https://en.wikipedia.org/wiki/Bacopa_monnieri"},
         "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä": {"display_name": "‡§¨‡•ç‡§∞‡§æ‡§π‡•ç‡§Æ‡•Ä", "info": "‡§™‡§æ‡§∞‡§Ç‡§™‡§∞‡§ø‡§ï ‡§Ü‡§Ø‡•Å‡§∞‡•ç‡§µ‡•á‡§¶‡§ø‡§ï ‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§™‡•ç‡§∞‡§Æ‡•Å‡§ñ, ‡§¨‡•ç‡§∞‡§æ‡§π‡•ç‡§Æ‡•Ä ‡§è‡§ï ‡§ó‡•à‡§∞-‡§∏‡•Å‡§ó‡§Ç‡§ß‡§ø‡§§ ‡§ú‡§°‡§º‡•Ä-‡§¨‡•Ç‡§ü‡•Ä ‡§π‡•à ‡§ú‡•ã ‡§Æ‡§∏‡•ç‡§§‡§ø‡§∑‡•ç‡§ï ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§™‡§®‡•á ‡§≤‡§æ‡§≠‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ú‡§æ‡§®‡•Ä ‡§ú‡§æ‡§§‡•Ä ‡§π‡•à‡•§", "uses": "‡§∏‡•ç‡§Æ‡•É‡§§‡§ø ‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§ß‡§æ‡§∞, ‡§ö‡§ø‡§Ç‡§§‡§æ ‡§ï‡§Æ ‡§ï‡§∞‡§®‡•á ‡§î‡§∞ ‡§Æ‡§ø‡§∞‡•ç‡§ó‡•Ä ‡§ï‡§æ ‡§á‡§≤‡§æ‡§ú ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§ ‡§á‡§∏‡§Æ‡•á‡§Ç ‡§Æ‡§ú‡§¨‡•Ç‡§§ ‡§è‡§Ç‡§ü‡•Ä‡§ë‡§ï‡•ç‡§∏‡•Ä‡§°‡•á‡§Ç‡§ü ‡§ó‡•Å‡§£ ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç‡•§", "found": "‡§¶‡§ï‡•ç‡§∑‡§ø‡§£‡•Ä ‡§î‡§∞ ‡§™‡•Ç‡§∞‡•ç‡§µ‡•Ä ‡§≠‡§æ‡§∞‡§§, ‡§ë‡§∏‡•ç‡§ü‡•ç‡§∞‡•á‡§≤‡§ø‡§Ø‡§æ, ‡§Ø‡•Ç‡§∞‡•ã‡§™, ‡§Ö‡§´‡•ç‡§∞‡•Ä‡§ï‡§æ, ‡§è‡§∂‡§ø‡§Ø‡§æ ‡§î‡§∞ ‡§â‡§§‡•ç‡§§‡§∞‡•Ä ‡§î‡§∞ ‡§¶‡§ï‡•ç‡§∑‡§ø‡§£‡•Ä ‡§Ö‡§Æ‡•á‡§∞‡§ø‡§ï‡§æ ‡§ï‡•á ‡§Ü‡§∞‡•ç‡§¶‡•ç‡§∞‡§≠‡•Ç‡§Æ‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§Æ‡•Ç‡§≤ ‡§®‡§ø‡§µ‡§æ‡§∏‡•Ä‡•§", "wiki": "https://hi.wikipedia.org/wiki/%E0%A4%AC%E0%A5%8D%E0%A4%B0%E0%A4%BE%E0%A4%B9%E0%A5%8D%E0%A4%AE%E0%A5%80"},
         "‡≤ï‡≤®‡≥ç‡≤®‡≤°": {"display_name": "‡≤¨‡≥ç‡≤∞‡≤æ‡≤π‡≥ç‡≤Æ‡≤ø", "info": "‡≤∏‡≤æ‡≤Ç‡≤™‡≥ç‡≤∞‡≤¶‡≤æ‡≤Ø‡≤ø‡≤ï ‡≤Ü‡≤Ø‡≥Å‡≤∞‡≥ç‡≤µ‡≥á‡≤¶ ‡≤î‡≤∑‡≤ß‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤™‡≥ç‡≤∞‡≤Æ‡≥Å‡≤ñ‡≤µ‡≤æ‡≤¶ ‡≤¨‡≥ç‡≤∞‡≤æ‡≤π‡≥ç‡≤Æ‡≤ø, ‡≤Æ‡≥Ü‡≤¶‡≥Å‡≤≥‡≤ø‡≤ó‡≥Ü ‡≤Ö‡≤¶‡≤∞ ‡≤™‡≥ç‡≤∞‡≤Ø‡≥ã‡≤ú‡≤®‡≤ó‡≤≥‡≤ø‡≤ó‡≥Ü ‡≤π‡≥Ü‡≤∏‡≤∞‡≥Å‡≤µ‡≤æ‡≤∏‡≤ø‡≤Ø‡≤æ‡≤¶ ‡≤∏‡≥Å‡≤µ‡≤æ‡≤∏‡≤®‡≥Ü‡≤Ø‡≤ø‡≤≤‡≥ç‡≤≤‡≤¶ ‡≤ó‡≤ø‡≤°‡≤Æ‡≥Ç‡≤≤‡≤ø‡≤ï‡≥Ü‡≤Ø‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü.", "uses": "‡≤®‡≥Ü‡≤®‡≤™‡≤ø‡≤® ‡≤∂‡≤ï‡≥ç‡≤§‡≤ø‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤∏‡≥Å‡≤ß‡≤æ‡≤∞‡≤ø‡≤∏‡≤≤‡≥Å, ‡≤Ü‡≤§‡≤Ç‡≤ï‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤ï‡≤°‡≤ø‡≤Æ‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤≤‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤Ö‡≤™‡≤∏‡≥ç‡≤Æ‡≤æ‡≤∞‡≤ï‡≥ç‡≤ï‡≥Ü ‡≤ö‡≤ø‡≤ï‡≤ø‡≤§‡≥ç‡≤∏‡≥Ü ‡≤®‡≥Ä‡≤°‡≤≤‡≥Å ‡≤¨‡≤≥‡≤∏‡≤≤‡≤æ‡≤ó‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü. ‡≤á‡≤¶‡≥Å ‡≤™‡≥ç‡≤∞‡≤¨‡≤≤‡≤µ‡≤æ‡≤¶ ‡≤â‡≤§‡≥ç‡≤ï‡≤∞‡≥ç‡≤∑‡≤£ ‡≤®‡≤ø‡≤∞‡≥ã‡≤ß‡≤ï ‡≤ó‡≥Å‡≤£‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤π‡≥ä‡≤Ç‡≤¶‡≤ø‡≤¶‡≥Ü.", "found": "‡≤¶‡≤ï‡≥ç‡≤∑‡≤ø‡≤£ ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤™‡≥Ç‡≤∞‡≥ç‡≤µ ‡≤≠‡≤æ‡≤∞‡≤§, ‡≤Ü‡≤∏‡≥ç‡≤ü‡≥ç‡≤∞‡≥á‡≤≤‡≤ø‡≤Ø‡≤æ, ‡≤Ø‡≥Å‡≤∞‡≥ã‡≤™‡≥ç, ‡≤Ü‡≤´‡≥ç‡≤∞‡≤ø‡≤ï‡≤æ, ‡≤è‡≤∑‡≥ç‡≤Ø‡≤æ, ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤â‡≤§‡≥ç‡≤§‡≤∞ ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤¶‡≤ï‡≥ç‡≤∑‡≤ø‡≤£ ‡≤Ö‡≤Æ‡≥Ü‡≤∞‡≤ø‡≤ï‡≤æ‡≤¶ ‡≤§‡≥á‡≤µ ‡≤™‡≥ç‡≤∞‡≤¶‡≥á‡≤∂‡≤ó‡≤≥ ‡≤∏‡≥ç‡≤•‡≤≥‡≥Ä‡≤Ø.", "wiki": "https://en.wikipedia.org/wiki/Bacopa_monnieri"}
    }
}

# --- Model Loading Functions ---
@st.cache_resource
def load_herb_model():
    model = tf.lite.Interpreter(model_path='herb_identifier.tflite')
    model.allocate_tensors()
    return model

@st.cache_resource
def load_quality_model():
    model = tf.lite.Interpreter(model_path='quality_checker.tflite')
    model.allocate_tensors()
    return model

# --- Prediction Function ---
def predict(image_data, model):
    size = (224, 224)
    image = image_data.resize(size)
    image_array = np.array(image)
    image_array = np.expand_dims(image_array, axis=0)
    
    input_details = model.get_input_details()
    output_details = model.get_output_details()
    
    model.set_tensor(input_details[0]['index'], image_array)
    model.invoke()
    output_data = model.get_tensor(output_details[0]['index'])
    
    return output_data

# --- Sidebar ---
selected_language_full = st.sidebar.selectbox("Select Language / ‡§≠‡§æ‡§∑‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç / ‡≤≠‡≤æ‡≤∑‡≥Ü‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü‡≤Æ‡≤æ‡≤°‡≤ø", ["English", "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä", "‡≤ï‡≤®‡≥ç‡≤®‡≤°"])
lang_key = selected_language_full.split(" ")[0]

st.sidebar.title(UI_TEXT[lang_key]["sidebar_about"])
st.sidebar.info(UI_TEXT[lang_key]["sidebar_info"])
st.sidebar.success(f"{UI_TEXT[lang_key]['sidebar_model_info_title']} {', '.join(HERB_DATA.keys())}.")
st.sidebar.warning(UI_TEXT[lang_key]["sidebar_warning"]) # <-- THIS LINE IS NOW CORRECTED

# --- Main App Interface ---
st.title(UI_TEXT[lang_key]["title"])
st.write(UI_TEXT[lang_key]["description"])

uploaded_file = st.file_uploader(UI_TEXT[lang_key]["uploader_label"], type=["jpg", "png", "jpeg"])

if uploaded_file is not None:
    image = Image.open(uploaded_file).convert('RGB')
    st.image(image, caption='Image for Authentication.', width=300)

    with st.spinner(UI_TEXT[lang_key]["spinner_identifying"]):
        herb_model = load_herb_model()
        herb_prediction = predict(image, herb_model)
        
        with open('labels_herb.txt', 'r') as f:
            herb_labels = [line.strip() for line in f.readlines()]
        
        scores = [float(f) / 255.0 for f in herb_prediction[0]]
        top_herb_index = np.argmax(scores)
        herb_label_english = herb_labels[top_herb_index]
        herb_confidence = scores[top_herb_index]

    if herb_label_english in HERB_DATA:
        herb_info = HERB_DATA[herb_label_english][lang_key]
        
        st.success(f"**{UI_TEXT[lang_key]['auth_complete']}**")
        st.metric(label=UI_TEXT[lang_key]['predicted_herb'], value=herb_info['display_name'], delta=f"{UI_TEXT[lang_key]['confidence']}: {herb_confidence:.2%}")
        
        st.subheader(f"{UI_TEXT[lang_key]['about_herb']} {herb_info['display_name']}")
        st.write(herb_info['info'])
        
        st.subheader(UI_TEXT[lang_key]['uses_advantages'])
        st.write(herb_info['uses'])
        
        st.subheader(UI_TEXT[lang_key]['found_in'])
        st.write(herb_info['found'])
        
        st.markdown(f"[{UI_TEXT[lang_key]['learn_more']}]({herb_info['wiki']})", unsafe_allow_html=True)
        
        if herb_label_english == 'Tulsi':
            if st.button(UI_TEXT[lang_key]['quality_check_button']):
                with st.spinner(UI_TEXT[lang_key]['spinner_quality']):
                    quality_model = load_quality_model()
                    quality_prediction = predict(image, quality_model)
                    
                    with open('labels_quality.txt', 'r') as f:
                        quality_labels = [line.strip() for line in f.readlines()]

                    quality_scores = [float(f) / 255.0 for f in quality_prediction[0]]
                    top_quality_index = np.argmax(quality_scores)
                    quality_label = quality_labels[top_quality_index]
                
                st.metric(label=UI_TEXT[lang_key]['quality_status'], value=quality_label)
    else:
        st.error("Could not identify a known herb from the database.")
else:
    st.info('Please upload an image to get started.')
